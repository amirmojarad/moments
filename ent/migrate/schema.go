// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChannelsColumns holds the columns for the "channels" table.
	ChannelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ChannelsTable holds the schema information for the "channels" table.
	ChannelsTable = &schema.Table{
		Name:       "channels",
		Columns:    ChannelsColumns,
		PrimaryKey: []*schema.Column{ChannelsColumns[0]},
	}
	// ChannelPostsColumns holds the columns for the "channel_posts" table.
	ChannelPostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ChannelPostsTable holds the schema information for the "channel_posts" table.
	ChannelPostsTable = &schema.Table{
		Name:       "channel_posts",
		Columns:    ChannelPostsColumns,
		PrimaryKey: []*schema.Column{ChannelPostsColumns[0]},
	}
	// FilesColumns holds the columns for the "files" table.
	FilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// FilesTable holds the schema information for the "files" table.
	FilesTable = &schema.Table{
		Name:       "files",
		Columns:    FilesColumns,
		PrimaryKey: []*schema.Column{FilesColumns[0]},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_date", Type: field.TypeTime},
		{Name: "updated_date", Type: field.TypeTime},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true},
		{Name: "text", Type: field.TypeString, Size: 2147483647},
		{Name: "message_replied_messages", Type: field.TypeInt, Nullable: true},
		{Name: "room_messages", Type: field.TypeInt, Nullable: true},
		{Name: "user_messages", Type: field.TypeInt, Nullable: true},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_messages_replied_messages",
				Columns:    []*schema.Column{MessagesColumns[5]},
				RefColumns: []*schema.Column{MessagesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_rooms_messages",
				Columns:    []*schema.Column{MessagesColumns[6]},
				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_users_messages",
				Columns:    []*schema.Column{MessagesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PostsColumns holds the columns for the "posts" table.
	PostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_date", Type: field.TypeTime},
		{Name: "updated_date", Type: field.TypeTime},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true},
		{Name: "plain_text", Type: field.TypeString, Size: 2147483647},
		{Name: "likes", Type: field.TypeUint64, Nullable: true, Default: 0},
		{Name: "link_url", Type: field.TypeString, Nullable: true},
		{Name: "user_posts", Type: field.TypeInt, Nullable: true},
	}
	// PostsTable holds the schema information for the "posts" table.
	PostsTable = &schema.Table{
		Name:       "posts",
		Columns:    PostsColumns,
		PrimaryKey: []*schema.Column{PostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "posts_users_posts",
				Columns:    []*schema.Column{PostsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RoomsColumns holds the columns for the "rooms" table.
	RoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_date", Type: field.TypeTime},
		{Name: "updated_date", Type: field.TypeTime},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"group", "private", "none"}, Default: "none"},
	}
	// RoomsTable holds the schema information for the "rooms" table.
	RoomsTable = &schema.Table{
		Name:       "rooms",
		Columns:    RoomsColumns,
		PrimaryKey: []*schema.Column{RoomsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_date", Type: field.TypeTime},
		{Name: "updated_date", Type: field.TypeTime},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "password", Type: field.TypeString, Size: 255},
		{Name: "full_name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "is_admin", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "is_staff", Type: field.TypeBool, Nullable: true, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserFollowingColumns holds the columns for the "user_following" table.
	UserFollowingColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "follower_id", Type: field.TypeInt},
	}
	// UserFollowingTable holds the schema information for the "user_following" table.
	UserFollowingTable = &schema.Table{
		Name:       "user_following",
		Columns:    UserFollowingColumns,
		PrimaryKey: []*schema.Column{UserFollowingColumns[0], UserFollowingColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_following_user_id",
				Columns:    []*schema.Column{UserFollowingColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_following_follower_id",
				Columns:    []*schema.Column{UserFollowingColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserRoomsColumns holds the columns for the "user_rooms" table.
	UserRoomsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "room_id", Type: field.TypeInt},
	}
	// UserRoomsTable holds the schema information for the "user_rooms" table.
	UserRoomsTable = &schema.Table{
		Name:       "user_rooms",
		Columns:    UserRoomsColumns,
		PrimaryKey: []*schema.Column{UserRoomsColumns[0], UserRoomsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_rooms_user_id",
				Columns:    []*schema.Column{UserRoomsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_rooms_room_id",
				Columns:    []*schema.Column{UserRoomsColumns[1]},
				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChannelsTable,
		ChannelPostsTable,
		FilesTable,
		MessagesTable,
		PostsTable,
		RoomsTable,
		UsersTable,
		UserFollowingTable,
		UserRoomsTable,
	}
)

func init() {
	MessagesTable.ForeignKeys[0].RefTable = MessagesTable
	MessagesTable.ForeignKeys[1].RefTable = RoomsTable
	MessagesTable.ForeignKeys[2].RefTable = UsersTable
	PostsTable.ForeignKeys[0].RefTable = UsersTable
	UserFollowingTable.ForeignKeys[0].RefTable = UsersTable
	UserFollowingTable.ForeignKeys[1].RefTable = UsersTable
	UserRoomsTable.ForeignKeys[0].RefTable = UsersTable
	UserRoomsTable.ForeignKeys[1].RefTable = RoomsTable
}
